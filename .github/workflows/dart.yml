# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
#       - uses: actions/checkout@v3

#       # Note: This workflow uses the latest stable version of the Dart SDK.
#       # You can specify other versions if desired, see documentation here:
#       # https://github.com/dart-lang/setup-dart/blob/main/README.md
#       # - uses: dart-lang/setup-dart@v1
#       - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

#       - name: Install dependencies
#         run: flutter pub get

#       # Uncomment this step to verify the use of 'dart format' on each commit.
#       # - name: Verify formatting
#       #   run: dart format --output=none --set-exit-if-changed .

#       # Consider passing '--fatal-infos' for slightly stricter analysis.
#       - name: Analyze project source
#         run: dart analyze

#       # Your project will need to have tests in test/ and a dependency on
#       # package:test for this step to succeed. Note that Flutter projects will
#       # want to change this to 'flutter test'.
#       - name: Run tests
#         run: dart test
#       steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.7'
      - run: flutter pub get
#      - run: flutter test
      - run: flutter build apk
      - run: flutter build appbundle

#      - name: Archive files
#          run: |
#          sudo apt-get update
#          sudo apt-get install zip
#          zip -r archive.zip *

 #     - name: Upload to gdrive
  #      uses: adityak74/google-drive-upload-git-action@main
   #   - name: CREDENTIALS
#        run: echo "${{ secrets.CREDENTIALS }}"
 #     - name: FOLDERID
  #      run: echo "${{ secrets.FOLDERID }}"
   #   - name: google-drive-upload-git-action
    #    uses: adityak74/google-drive-upload-git-action@v0.3
#
 #       with:
  #        credentials: ${{ secrets.CREDENTIALS }} #it's the key from Google Drive API 
   #       filename: "build/app/outputs/flutter-apk/app-release.apk"
    #      folderId: ${{ secrets.FOLDERID }} #the encrode in the url of google drive 
     #     overwrite: "true" # optional boolean
      #    mirrorDirectoryStructure: "true"
       #   useCompleteSourceFilenameAsName: "true"
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Archive files
        run: |
          sudo apt-get update
          sudo apt-get install zip
          zip -r archive.zip *

      - name: Upload to gdrive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.credentials }}
          filename: "archive.zip"
          folderId: ${{ secrets.folderId }}
          name: "documentation.zip" # optional string
          overwrite: "true" # optional boolean
      - name: Make Directory Structure
        run: |
          mkdir -p w/x/y
          date +%s > w/x/y/z
      - name: Mirror Directory Structure
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.DRIVE_CREDENTIALS }}
          filename: w/x/y/z
          folderId: ${{ secrets.folderId }}
          overwrite: "true"
          mirrorDirectoryStructure: "true"
          
          
